
# \u7B2C\u4E09\u6B65 \u5F15\u5165\u914D\u7F6E
# \u6253\u5370sql  - \u65E5\u5FD7\u7EA7\u522B
logging.level.cn.chenhaoxiang.mapper=info
logging.level.org.springframework=info
logging.level.org.springframework.boot=info
# \u751F\u4EA7\u73AF\u5883\u914D\u7F6E
server.port=8085
debug=true
# \u6570\u636E\u6E90\u914D\u7F6E\uFF0C\u8BF7\u4FEE\u6539\u4E3A\u4F60\u9879\u76EE\u7684\u5B9E\u9645\u914D\u7F6E
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://172.31.0.15:3306/yunjiitem?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&allowMultiQueries=true
spring.datasource.username=yjdb
spring.datasource.password=yjDb123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.connection-init-sqls=set names utf8mb4;

##mybatis-plus mapper xml \u6587\u4EF6\u5730\u5740
mybatis-plus.mapper-locations=classpath*:mapper/*Mapper.xml
##mybatis-plus type-aliases \u6587\u4EF6\u5730\u5740
mybatis-plus.type-aliases-package=fast.mock.test.demo.entity
# \u9A7C\u5CF0\u4E0B\u5212\u7EBF\u8F6C\u6362
mybatis-plus.configuration.map-underscore-to-camel-case=true
# \u914D\u7F6E\u7684\u7F13\u5B58\u7684\u5168\u5C40\u5F00\u5173
mybatis-plus.configuration.cache-enabled=true
# \u5EF6\u65F6\u52A0\u8F7D\u7684\u5F00\u5173
mybatis-plus.configuration.lazy-loading-enabled=true


# \u914D\u7F6Edruid\u76D1\u63A7 start
##################    \u8FDE\u63A5\u6C60\u914D\u7F6E    ################
# \u521D\u59CB\u5316\u8FDE\u63A5\u6C60\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
#\u8FDE\u63A5\u6C60\u4E2D\u6700\u5C0F\u7684\u6D3B\u8DC3\u8FDE\u63A5\u6570
spring.datasource.druid.min-idle=5
#\u8FDE\u63A5\u6C60\u5EFA\u7ACB\u65F6\u521B\u5EFA\u7684\u521D\u59CB\u5316\u8FDE\u63A5\u6570
spring.datasource.druid.initial-size=5
#\u8FDE\u63A5\u6C60\u4E2D\u6700\u5927\u7684\u6D3B\u8DC3\u8FDE\u63A5\u6570
spring.datasource.druid.max-active=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.max-wait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.time-between-eviction-runs-millis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=30000
#\u662F\u5426\u5728\u83B7\u5F97\u8FDE\u63A5\u540E\u68C0\u6D4B\u5176\u53EF\u7528\u6027
spring.datasource.druid.test-on-borrow=false
#\u662F\u5426\u5728\u8FDE\u63A5\u653E\u56DE\u8FDE\u63A5\u6C60\u540E\u68C0\u6D4B\u5176\u53EF\u7528\u6027
spring.datasource.druid.test-on-return=false
#\u662F\u5426\u5728\u8FDE\u63A5\u7A7A\u95F2\u4E00\u6BB5\u65F6\u95F4\u540E\u68C0\u6D4B\u5176\u53EF\u7528\u6027
spring.datasource.druid.test-while-idle=true
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #\u548C\u4E0A\u9762\u7684\u7B49\u4EF7

# \u8FC7\u6EE4\u5668\u8BBE\u7F6E\uFF08\u7B2C\u4E00\u4E2Astat\u5F88\u91CD\u8981\uFF0C\u6CA1\u6709\u7684\u8BDD\u4F1A\u76D1\u63A7\u4E0D\u5230SQL\uFF09 'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,wall,log4j2

# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
# \u6162sql ms
spring.datasource.druid.filter.stat.slow-sql-millis=200
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true

# \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u76D1\u63A7\u63A7\u5236\u53F0\u4E2D\u201CSpring\u76D1\u63A7\u201D\u5B50\u9875\u9762\u5185\u5BB9\u662F\u7A7A\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7C7B\u4F3C\u5982\u4E0B\u7684\u914D\u7F6E\uFF0C\u5229\u7528 aop \u5BF9\u5404\u4E2A\u5185\u5BB9\u63A5\u53E3\u7684\u6267\u884C\u65F6\u95F4\u3001jdbc \u6570\u8FDB\u884C\u8BB0\u5F55\u3002
# Spring \u76D1\u63A7\u914D\u7F6E\uFF08\u914D\u7F6E\u591A\u4E2AAOP\u5207\u5165\u70B9\u4F7F\u7528\u82F1\u6587\u9017\u53F7\u5206\u9694\uFF09 \u540C\u65F6\u8BB0\u5F97\u4FEE\u6539 pom.xml \u6587\u4EF6\uFF0C\u6DFB\u52A0 spring-boot-starter-aop \u4F9D\u8D56\u4EE5\u63D0\u4F9B AOP \u652F\u6301\uFF1A
spring.datasource.druid.aop-patterns=fast.mock.test.demo.*

# end
